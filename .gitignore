# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*
*plan*

# Terraform lock files (SHOULD be committed for reproducible builds)
# Uncomment the line below only if you have specific reasons to ignore lock files
# .terraform.lock.hcl

# Ignore CLI configuration files
.terraformrc
terraform.rc

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Backup files
*.backup
*.bak
*.tmp

# SSH Keys (security)
*.pem
*.key
*.p12
*.pfx

# AWS CLI credentials
.aws/
aws-credentials

# Environment variables
.env
.env.local
.env.*.local

# Logs
*.log
logs/

# Temporary files
tmp/
temp/

# Lock files from package managers
package-lock.json
yarn.lock

# Python cache (if using any Python scripts)
__pycache__/
*.py[cod]
*$py.class

# Node modules (if using any Node.js tools)
node_modules/

# Go binaries (if using any Go tools)
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool
*.out

# Dependency directories
vendor/

# Additional Terraform patterns
*.auto.tfvars
*.auto.tfvars.json

# Ansible files (in case you integrate with Ansible)
*.retry

# Packer files
packer_cache/
*.pkr.hcl.pkrvars.hcl